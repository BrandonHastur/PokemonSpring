package com.example.productos.services;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import com.example.productos.models.entities.Producto;
import com.example.productos.models.repositories.ProductoRepository;

@Service
public class ProductoServiceImpl implements ProductoService {

    @Autowired
    private ProductoRepository repository;

    @Override
    @Transactional(readOnly = true)
    public Optional<Producto> obtenerPorId(Long id) {
        return repository.findById(id);
    }

    @Override
    @Transactional
    public Producto insertar(Producto producto) {
        return repository.save(producto);
    }

    @Override
    @Transactional
    public Producto editar(Producto producto, Long id) {
        Optional<Producto> optionalProducto = repository.findById(id);
        if (optionalProducto.isPresent()) {
            Producto existingProducto = optionalProducto.get();
         
            existingProducto.setNombre(producto.getNombre());
            existingProducto.setPrecio(producto.getPrecio());
            existingProducto.setDescripcion(producto.getDescripcion());

            
            return repository.save(existingProducto);
        }
        return null;
    }

 // In your ProductoServiceImpl
    @Override
    @Transactional
    public boolean eliminar(Long id) {
        Optional<Producto> opt = repository.findById(id);
        if (opt.isPresent()) {
            repository.deleteById(id);
            return true;
        }
        return false;
    }
    
    @Override
    @Transactional(readOnly = true)
    public List<Producto> listar() {
        return repository.findAll();
    }
}